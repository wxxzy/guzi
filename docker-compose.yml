version: '3.8'

services:
  # 后端应用
  backend:
    build: .
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=postgresql://gushi_user:${DB_PASSWORD}@db:5432/gushi_db
      - QWEN_API_KEY=${QWEN_API_KEY}
      - VOLC_API_KEY=${VOLC_API_KEY}
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - db
      - redis
    volumes:
      - ./logs:/var/log/gushi
      - ./uploads:/app/uploads
    restart: unless-stopped
    networks:
      - gushi-network

  # PostgreSQL数据库
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=gushi_db
      - POSTGRES_USER=gushi_user
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - gushi-network

  # Redis缓存和会话存储
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - gushi-network

  # Nginx反向代理（可选）
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - ./logs:/var/log/nginx
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - gushi-network

  # 前端应用（可选）
  frontend:
    build: 
      context: ../gushi_frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:5000
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - gushi-network

volumes:
  postgres_data:
  redis_data:

networks:
  gushi-network:
    driver: bridge